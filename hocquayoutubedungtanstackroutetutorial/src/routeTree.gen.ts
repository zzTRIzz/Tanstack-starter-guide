/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PostsIndexImport } from './routes/posts/index'
import { Route as PostsDungCssIndexImport } from './routes/posts-dung-css/index'
import { Route as PostsIdImport } from './routes/posts/$id'
import { Route as PostsDungCssIdImport } from './routes/posts-dung-css/$id'

// Create Virtual Routes

const ContactLazyImport = createFileRoute('/contact')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const ContactLazyRoute = ContactLazyImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/contact.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const PostsIndexRoute = PostsIndexImport.update({
  id: '/posts/',
  path: '/posts/',
  getParentRoute: () => rootRoute,
} as any)

const PostsDungCssIndexRoute = PostsDungCssIndexImport.update({
  id: '/posts-dung-css/',
  path: '/posts-dung-css/',
  getParentRoute: () => rootRoute,
} as any)

const PostsIdRoute = PostsIdImport.update({
  id: '/posts/$id',
  path: '/posts/$id',
  getParentRoute: () => rootRoute,
} as any)

const PostsDungCssIdRoute = PostsDungCssIdImport.update({
  id: '/posts-dung-css/$id',
  path: '/posts-dung-css/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactLazyImport
      parentRoute: typeof rootRoute
    }
    '/posts-dung-css/$id': {
      id: '/posts-dung-css/$id'
      path: '/posts-dung-css/$id'
      fullPath: '/posts-dung-css/$id'
      preLoaderRoute: typeof PostsDungCssIdImport
      parentRoute: typeof rootRoute
    }
    '/posts/$id': {
      id: '/posts/$id'
      path: '/posts/$id'
      fullPath: '/posts/$id'
      preLoaderRoute: typeof PostsIdImport
      parentRoute: typeof rootRoute
    }
    '/posts-dung-css/': {
      id: '/posts-dung-css/'
      path: '/posts-dung-css'
      fullPath: '/posts-dung-css'
      preLoaderRoute: typeof PostsDungCssIndexImport
      parentRoute: typeof rootRoute
    }
    '/posts/': {
      id: '/posts/'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/contact': typeof ContactLazyRoute
  '/posts-dung-css/$id': typeof PostsDungCssIdRoute
  '/posts/$id': typeof PostsIdRoute
  '/posts-dung-css': typeof PostsDungCssIndexRoute
  '/posts': typeof PostsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/contact': typeof ContactLazyRoute
  '/posts-dung-css/$id': typeof PostsDungCssIdRoute
  '/posts/$id': typeof PostsIdRoute
  '/posts-dung-css': typeof PostsDungCssIndexRoute
  '/posts': typeof PostsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/contact': typeof ContactLazyRoute
  '/posts-dung-css/$id': typeof PostsDungCssIdRoute
  '/posts/$id': typeof PostsIdRoute
  '/posts-dung-css/': typeof PostsDungCssIndexRoute
  '/posts/': typeof PostsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/contact'
    | '/posts-dung-css/$id'
    | '/posts/$id'
    | '/posts-dung-css'
    | '/posts'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/contact'
    | '/posts-dung-css/$id'
    | '/posts/$id'
    | '/posts-dung-css'
    | '/posts'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/contact'
    | '/posts-dung-css/$id'
    | '/posts/$id'
    | '/posts-dung-css/'
    | '/posts/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AboutLazyRoute: typeof AboutLazyRoute
  ContactLazyRoute: typeof ContactLazyRoute
  PostsDungCssIdRoute: typeof PostsDungCssIdRoute
  PostsIdRoute: typeof PostsIdRoute
  PostsDungCssIndexRoute: typeof PostsDungCssIndexRoute
  PostsIndexRoute: typeof PostsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AboutLazyRoute: AboutLazyRoute,
  ContactLazyRoute: ContactLazyRoute,
  PostsDungCssIdRoute: PostsDungCssIdRoute,
  PostsIdRoute: PostsIdRoute,
  PostsDungCssIndexRoute: PostsDungCssIndexRoute,
  PostsIndexRoute: PostsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/contact",
        "/posts-dung-css/$id",
        "/posts/$id",
        "/posts-dung-css/",
        "/posts/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/contact": {
      "filePath": "contact.lazy.tsx"
    },
    "/posts-dung-css/$id": {
      "filePath": "posts-dung-css/$id.tsx"
    },
    "/posts/$id": {
      "filePath": "posts/$id.tsx"
    },
    "/posts-dung-css/": {
      "filePath": "posts-dung-css/index.tsx"
    },
    "/posts/": {
      "filePath": "posts/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
